plugins {
    id 'java'
    id 'kr.entree.spigradle' version '2.2.4'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

group = 'fr.minemobs'
version = '1.4'

compileJava.options.encoding = compileTestJava.options.encoding = javadoc.options.encoding = "UTF-8"

compileJava {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

String missingPermissionMessage = '§8[§4Minemobs Utils§8] §4You do not have the permission!'

repositories {
    mavenCentral()
    maven {
        name = 'CodeMC'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven { url = "https://repo.dmulloy2.net/repository/public/" }
    maven {
        url = "https://minevolt.net/repo/"
    }
    //maven {url = "https://repo.inventivetalent.org/content/groups/public/"}
    maven {
        allowInsecureProtocol = true
        name = "Minemobs Snapshot"
        url = "http://minemobs.galaxyfight.fr:8081/snapshots/"
    }
    maven {
        name = "Spigot-Repo"
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = "enginehub-maven"
        url = "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT")
    compileOnly('org.spigotmc:spigot:1.17.1-R0.1-SNAPSHOT')
    compileOnly 'org.jetbrains:annotations:22.0.0'
    compileOnly('net.skinsrestorer:skinsrestorer:14.1.1') {
        transitive(false)
    }
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.7.0"
    compileOnly('com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT') {
        exclude group: "org.bukkit", module: "bukkit"
    }

    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    implementation group: 'de.tr7zw', name: 'item-nbt-api', version: '2.8.0'
    implementation("com.flowpowered:flow-nbt:1.0.0")
}

shadowJar {
    archiveClassifier.set('')
    archiveVersion.set('')
    relocate 'de.tr7zw.changeme', 'fr.minemobs.relocate'
    relocate 'org.reflections', 'fr.minemobs.relocate.reflections'
    relocate 'javassist', 'fr.minemobs.relocate.javassist'
    relocate 'org.bstats', 'fr.minemobs.relocate.bstats'
    relocate 'com.flowpowered.nbt', 'fr.minemobs.relocate.flowpowered.nbt'
}

spigot {
    authors 'Minemobs'
    apiVersion '1.17'
    website = "https://github.com/Minemobs/MinemobsUtils"
    //You will never need to install AutoReload on your server but it's just so AutoReload load before my plugin
    softDepends("SkinsRestorer", "AutoReload")
    commands {
        colorcode {
            aliases 'cc', 'chatcolor'
            usage '/<command>'
        }
        craft {
            aliases "crafting", "craftingtable", "workbench"
            permission 'minemobsutils.openWorkbench'
            permissionMessage missingPermissionMessage
            usage '/<command>'
        }
        ec {
            aliases 'enderchest'
            permission 'minemobsutils.enderchest'
            permissionMessage missingPermissionMessage
            usage '/<command> [target] [source]'
        }
        customitems {
            aliases 'ci'
            permission 'minemobsutils.inventories.customitems'
            permissionMessage missingPermissionMessage
            usage '/<command>'
        }
        ping {
            usage '/<command> [player]'
        }
        customenchant {
            aliases 'ce'
            permission 'minemobsutils.inventories.customenchant'
            permissionMessage missingPermissionMessage
            usage '/<command>'
        }
        heal {
            usage '/<command> [player]'
        }
        feed {
            usage '/<command> [player]'
        }
        fly {
            permission 'minemobsutils.fly'
            permissionMessage missingPermissionMessage
            usage '/<command>'
        }
        staffchat {
            aliases 'sc'
            permission 'minemobsutils.mod.chat'
            permissionMessage missingPermissionMessage
            usage '/<command> <message>'
        }
        nick {
            permission 'minemobsutils.nick'
            permissionMessage missingPermissionMessage
            usage '/<command> [player] <nick>'
        }
        broadcast {
            aliases 'bc'
            permission 'minemobsutils.broadcast'
            permissionMessage missingPermissionMessage
            usage '/<command> <message>'
        }
        top {
            permission 'minemobsutils.top'
            permissionMessage missingPermissionMessage
            usage '/<command>'
        }
    }

    debug {
        args '--nojline' , '--max-players', '100', '--nogui', '--server-name', 'Cacahuete Test Server'

        buildVersion = "1.17.1"
        jvmArgs '-Xmx2G'
        serverPort 25565
    }
}


task copyFile(type: Copy) {

    /**
     * Check if it's minemobs's computer
     */

    if(InetAddress.localHost.hostName != "DESKTOP-USNU2V8") return
    from file("$buildDir/libs/${archivesBaseName}.jar")
    into file((System.properties['os.name'].toLowerCase().contains('windows') ? "E:" : "/mnt/e") + File.separatorChar + "Users" + File.separatorChar + "minemobs" + File.separatorChar + "IdeaProjects" + File.separatorChar + "SpigotProject" + File.separatorChar +
            "MinemobsUtils" + File.separatorChar + "debug" + File.separatorChar + "spigot" + File.separatorChar + "plugins")
}

build.finalizedBy(copyFile)
shadowJar.finalizedBy(copyFile)